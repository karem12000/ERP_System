// <auto-generated />
using System;
using ERP_System.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ERP_System.DAL.Migrations
{
    [DbContext(typeof(ERP_SystemDbContext))]
    [Migration("20230605133543_insertData")]
    partial class insertData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ERP_System.Tables.ActionsPage", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ActionName")
                        .HasColumnType("int");

                    b.Property<Guid?>("AddedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("PageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("AddedBy");

                    b.HasIndex("DeletedBy");

                    b.HasIndex("ModifiedBy");

                    b.HasIndex("PageId");

                    b.ToTable("ActionsPages", "Page");
                });

            modelBuilder.Entity("ERP_System.Tables.Attachment", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AddedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Path")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("AddedBy");

                    b.HasIndex("DeletedBy");

                    b.HasIndex("ModifiedBy");

                    b.HasIndex("ProductId");

                    b.ToTable("Attachments", "Guide");
                });

            modelBuilder.Entity("ERP_System.Tables.Invoice", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AddedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BuyerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("InvoiceDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("InvoiceNumber")
                        .HasColumnType("int");

                    b.Property<int?>("InvoiceType")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ResourceName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ID");

                    b.HasIndex("AddedBy");

                    b.HasIndex("DeletedBy");

                    b.HasIndex("ModifiedBy");

                    b.ToTable("Invoices", "Guide");
                });

            modelBuilder.Entity("ERP_System.Tables.InvoiceDetail", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AddedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("GroupName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("InvoiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("PricePerUnit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("Qty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("StockId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("StockName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UnitId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UnitName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("AddedBy");

                    b.HasIndex("DeletedBy");

                    b.HasIndex("InvoiceId");

                    b.HasIndex("ModifiedBy");

                    b.HasIndex("ProductId");

                    b.ToTable("InvoiceDetails", "Guide");
                });

            modelBuilder.Entity("ERP_System.Tables.ItemGrpoup", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AddedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("AddedBy");

                    b.HasIndex("DeletedBy");

                    b.HasIndex("ModifiedBy");

                    b.ToTable("ItemGrpoups", "Guide");
                });

            modelBuilder.Entity("ERP_System.Tables.Page", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AddedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AreaName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ControllerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IconName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("AddedBy");

                    b.HasIndex("DeletedBy");

                    b.HasIndex("ModifiedBy");

                    b.ToTable("Pages", "Page");
                });

            modelBuilder.Entity("ERP_System.Tables.Product", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AddedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BarCodePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BarCodeText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<decimal?>("QtyInStock")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("UnitId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("AddedBy");

                    b.HasIndex("DeletedBy");

                    b.HasIndex("GroupId");

                    b.HasIndex("ModifiedBy");

                    b.HasIndex("UnitId");

                    b.ToTable("Products", "Guide");
                });

            modelBuilder.Entity("ERP_System.Tables.Setting", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AddedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Logo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SiteName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("AddedBy");

                    b.HasIndex("DeletedBy");

                    b.HasIndex("ModifiedBy");

                    b.ToTable("Settings", "Setting");
                });

            modelBuilder.Entity("ERP_System.Tables.Stock", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AddedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ManagerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("AddedBy");

                    b.HasIndex("DeletedBy");

                    b.HasIndex("ModifiedBy");

                    b.ToTable("Stocks", "Guide");
                });

            modelBuilder.Entity("ERP_System.Tables.StockProduct", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AddedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("StockId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("AddedBy");

                    b.HasIndex("DeletedBy");

                    b.HasIndex("ModifiedBy");

                    b.HasIndex("ProductId");

                    b.HasIndex("StockId");

                    b.ToTable("StockProducts", "Guide");
                });

            modelBuilder.Entity("ERP_System.Tables.Unit", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AddedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("Rate")
                        .HasColumnType("float");

                    b.Property<int?>("UnitType")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("AddedBy");

                    b.HasIndex("DeletedBy");

                    b.HasIndex("ModifiedBy");

                    b.ToTable("Units", "Guide");
                });

            modelBuilder.Entity("ERP_System.Tables.User", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AddedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodeOfReset")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ResetPasswordDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Salt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("UseDefaultPassword")
                        .HasColumnType("bit");

                    b.Property<int?>("UserClassification")
                        .HasColumnType("int");

                    b.Property<string>("UserImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid?>("UserTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("AddedBy");

                    b.HasIndex("DeletedBy");

                    b.HasIndex("ModifiedBy");

                    b.HasIndex("UserTypeId");

                    b.ToTable("Users", "People");
                });

            modelBuilder.Entity("ERP_System.Tables.UserPermission", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AddedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("PageActionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UserTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("AddedBy");

                    b.HasIndex("DeletedBy");

                    b.HasIndex("ModifiedBy");

                    b.HasIndex("PageActionId");

                    b.HasIndex("UserTypeId");

                    b.ToTable("UserPermissions", "People");
                });

            modelBuilder.Entity("ERP_System.Tables.UserStock", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AddedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("StockId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("AddedBy");

                    b.HasIndex("DeletedBy");

                    b.HasIndex("ModifiedBy");

                    b.HasIndex("StockId");

                    b.HasIndex("UserId");

                    b.ToTable("UserStocks", "People");
                });

            modelBuilder.Entity("ERP_System.Tables.UserType", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AddedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("AddedBy");

                    b.HasIndex("DeletedBy");

                    b.HasIndex("ModifiedBy");

                    b.ToTable("UserTypes", "Guide");
                });

            modelBuilder.Entity("ERP_System.Tables.ActionsPage", b =>
                {
                    b.HasOne("ERP_System.Tables.User", "CreatedUser")
                        .WithMany("ActionsPageCreated")
                        .HasForeignKey("AddedBy");

                    b.HasOne("ERP_System.Tables.User", "DeletedUser")
                        .WithMany("ActionsPageDeleted")
                        .HasForeignKey("DeletedBy");

                    b.HasOne("ERP_System.Tables.User", "ModifiedUser")
                        .WithMany("ActionsPageModified")
                        .HasForeignKey("ModifiedBy");

                    b.HasOne("ERP_System.Tables.Page", "Page")
                        .WithMany("ActionsPages")
                        .HasForeignKey("PageId");

                    b.Navigation("CreatedUser");

                    b.Navigation("DeletedUser");

                    b.Navigation("ModifiedUser");

                    b.Navigation("Page");
                });

            modelBuilder.Entity("ERP_System.Tables.Attachment", b =>
                {
                    b.HasOne("ERP_System.Tables.User", "CreatedUser")
                        .WithMany("AttatchCreated")
                        .HasForeignKey("AddedBy");

                    b.HasOne("ERP_System.Tables.User", "DeletedUser")
                        .WithMany("AttatchDeleted")
                        .HasForeignKey("DeletedBy");

                    b.HasOne("ERP_System.Tables.User", "ModifiedUser")
                        .WithMany("AttatchModified")
                        .HasForeignKey("ModifiedBy");

                    b.HasOne("ERP_System.Tables.Product", "Product")
                        .WithMany("Attachments")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedUser");

                    b.Navigation("DeletedUser");

                    b.Navigation("ModifiedUser");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ERP_System.Tables.Invoice", b =>
                {
                    b.HasOne("ERP_System.Tables.User", "CreatedUser")
                        .WithMany("InvoiceCreated")
                        .HasForeignKey("AddedBy");

                    b.HasOne("ERP_System.Tables.User", "DeletedUser")
                        .WithMany("InvoiceDeleted")
                        .HasForeignKey("DeletedBy");

                    b.HasOne("ERP_System.Tables.User", "ModifiedUser")
                        .WithMany("InvoiceModified")
                        .HasForeignKey("ModifiedBy");

                    b.Navigation("CreatedUser");

                    b.Navigation("DeletedUser");

                    b.Navigation("ModifiedUser");
                });

            modelBuilder.Entity("ERP_System.Tables.InvoiceDetail", b =>
                {
                    b.HasOne("ERP_System.Tables.User", "CreatedUser")
                        .WithMany("InvoiceDetailCreated")
                        .HasForeignKey("AddedBy");

                    b.HasOne("ERP_System.Tables.User", "DeletedUser")
                        .WithMany("InvoiceDetailDeleted")
                        .HasForeignKey("DeletedBy");

                    b.HasOne("ERP_System.Tables.Invoice", "Invoice")
                        .WithMany("InvoiceDetails")
                        .HasForeignKey("InvoiceId");

                    b.HasOne("ERP_System.Tables.User", "ModifiedUser")
                        .WithMany("InvoiceDetailModified")
                        .HasForeignKey("ModifiedBy");

                    b.HasOne("ERP_System.Tables.Product", "Product")
                        .WithMany("InvoiceDetails")
                        .HasForeignKey("ProductId");

                    b.Navigation("CreatedUser");

                    b.Navigation("DeletedUser");

                    b.Navigation("Invoice");

                    b.Navigation("ModifiedUser");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ERP_System.Tables.ItemGrpoup", b =>
                {
                    b.HasOne("ERP_System.Tables.User", "CreatedUser")
                        .WithMany("ItemGroupCreated")
                        .HasForeignKey("AddedBy");

                    b.HasOne("ERP_System.Tables.User", "DeletedUser")
                        .WithMany("ItemGroupDeleted")
                        .HasForeignKey("DeletedBy");

                    b.HasOne("ERP_System.Tables.User", "ModifiedUser")
                        .WithMany("ItemGroupModified")
                        .HasForeignKey("ModifiedBy");

                    b.Navigation("CreatedUser");

                    b.Navigation("DeletedUser");

                    b.Navigation("ModifiedUser");
                });

            modelBuilder.Entity("ERP_System.Tables.Page", b =>
                {
                    b.HasOne("ERP_System.Tables.User", "CreatedUser")
                        .WithMany("PageCreated")
                        .HasForeignKey("AddedBy");

                    b.HasOne("ERP_System.Tables.User", "DeletedUser")
                        .WithMany("PageDeleted")
                        .HasForeignKey("DeletedBy");

                    b.HasOne("ERP_System.Tables.User", "ModifiedUser")
                        .WithMany("PageModified")
                        .HasForeignKey("ModifiedBy");

                    b.Navigation("CreatedUser");

                    b.Navigation("DeletedUser");

                    b.Navigation("ModifiedUser");
                });

            modelBuilder.Entity("ERP_System.Tables.Product", b =>
                {
                    b.HasOne("ERP_System.Tables.User", "CreatedUser")
                        .WithMany("ProductCreated")
                        .HasForeignKey("AddedBy");

                    b.HasOne("ERP_System.Tables.User", "DeletedUser")
                        .WithMany("ProductDeleted")
                        .HasForeignKey("DeletedBy");

                    b.HasOne("ERP_System.Tables.ItemGrpoup", "Group")
                        .WithMany("Products")
                        .HasForeignKey("GroupId");

                    b.HasOne("ERP_System.Tables.User", "ModifiedUser")
                        .WithMany("ProductModified")
                        .HasForeignKey("ModifiedBy");

                    b.HasOne("ERP_System.Tables.Unit", "Unit")
                        .WithMany("Products")
                        .HasForeignKey("UnitId");

                    b.Navigation("CreatedUser");

                    b.Navigation("DeletedUser");

                    b.Navigation("Group");

                    b.Navigation("ModifiedUser");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("ERP_System.Tables.Setting", b =>
                {
                    b.HasOne("ERP_System.Tables.User", "CreatedUser")
                        .WithMany("SettingCreated")
                        .HasForeignKey("AddedBy");

                    b.HasOne("ERP_System.Tables.User", "DeletedUser")
                        .WithMany("SettingDeleted")
                        .HasForeignKey("DeletedBy");

                    b.HasOne("ERP_System.Tables.User", "ModifiedUser")
                        .WithMany("SettingModified")
                        .HasForeignKey("ModifiedBy");

                    b.Navigation("CreatedUser");

                    b.Navigation("DeletedUser");

                    b.Navigation("ModifiedUser");
                });

            modelBuilder.Entity("ERP_System.Tables.Stock", b =>
                {
                    b.HasOne("ERP_System.Tables.User", "CreatedUser")
                        .WithMany("StockCreated")
                        .HasForeignKey("AddedBy");

                    b.HasOne("ERP_System.Tables.User", "DeletedUser")
                        .WithMany("StockDeleted")
                        .HasForeignKey("DeletedBy");

                    b.HasOne("ERP_System.Tables.User", "ModifiedUser")
                        .WithMany("StockModified")
                        .HasForeignKey("ModifiedBy");

                    b.Navigation("CreatedUser");

                    b.Navigation("DeletedUser");

                    b.Navigation("ModifiedUser");
                });

            modelBuilder.Entity("ERP_System.Tables.StockProduct", b =>
                {
                    b.HasOne("ERP_System.Tables.User", "CreatedUser")
                        .WithMany("StockProductCreated")
                        .HasForeignKey("AddedBy");

                    b.HasOne("ERP_System.Tables.User", "DeletedUser")
                        .WithMany("StockProductDeleted")
                        .HasForeignKey("DeletedBy");

                    b.HasOne("ERP_System.Tables.User", "ModifiedUser")
                        .WithMany("StockProductModified")
                        .HasForeignKey("ModifiedBy");

                    b.HasOne("ERP_System.Tables.Product", "Product")
                        .WithMany("StockProducts")
                        .HasForeignKey("ProductId");

                    b.HasOne("ERP_System.Tables.Stock", "Stock")
                        .WithMany()
                        .HasForeignKey("StockId");

                    b.Navigation("CreatedUser");

                    b.Navigation("DeletedUser");

                    b.Navigation("ModifiedUser");

                    b.Navigation("Product");

                    b.Navigation("Stock");
                });

            modelBuilder.Entity("ERP_System.Tables.Unit", b =>
                {
                    b.HasOne("ERP_System.Tables.User", "CreatedUser")
                        .WithMany("UnitCreated")
                        .HasForeignKey("AddedBy");

                    b.HasOne("ERP_System.Tables.User", "DeletedUser")
                        .WithMany("UnitDeleted")
                        .HasForeignKey("DeletedBy");

                    b.HasOne("ERP_System.Tables.User", "ModifiedUser")
                        .WithMany("UnitModified")
                        .HasForeignKey("ModifiedBy");

                    b.Navigation("CreatedUser");

                    b.Navigation("DeletedUser");

                    b.Navigation("ModifiedUser");
                });

            modelBuilder.Entity("ERP_System.Tables.User", b =>
                {
                    b.HasOne("ERP_System.Tables.User", "CreatedUser")
                        .WithMany("UserCreated")
                        .HasForeignKey("AddedBy");

                    b.HasOne("ERP_System.Tables.User", "DeletedUser")
                        .WithMany("UserDeleted")
                        .HasForeignKey("DeletedBy");

                    b.HasOne("ERP_System.Tables.User", "ModifiedUser")
                        .WithMany("UserModified")
                        .HasForeignKey("ModifiedBy");

                    b.HasOne("ERP_System.Tables.UserType", "UserType")
                        .WithMany("Users")
                        .HasForeignKey("UserTypeId");

                    b.Navigation("CreatedUser");

                    b.Navigation("DeletedUser");

                    b.Navigation("ModifiedUser");

                    b.Navigation("UserType");
                });

            modelBuilder.Entity("ERP_System.Tables.UserPermission", b =>
                {
                    b.HasOne("ERP_System.Tables.User", "CreatedUser")
                        .WithMany("UserPermissionCreated")
                        .HasForeignKey("AddedBy");

                    b.HasOne("ERP_System.Tables.User", "DeletedUser")
                        .WithMany("UserPermissionDeleted")
                        .HasForeignKey("DeletedBy");

                    b.HasOne("ERP_System.Tables.User", "ModifiedUser")
                        .WithMany("UserPermissionModified")
                        .HasForeignKey("ModifiedBy");

                    b.HasOne("ERP_System.Tables.ActionsPage", "ActionsPage")
                        .WithMany("UserPermissions")
                        .HasForeignKey("PageActionId");

                    b.HasOne("ERP_System.Tables.UserType", "UserType")
                        .WithMany("UserPermissions")
                        .HasForeignKey("UserTypeId");

                    b.Navigation("ActionsPage");

                    b.Navigation("CreatedUser");

                    b.Navigation("DeletedUser");

                    b.Navigation("ModifiedUser");

                    b.Navigation("UserType");
                });

            modelBuilder.Entity("ERP_System.Tables.UserStock", b =>
                {
                    b.HasOne("ERP_System.Tables.User", "CreatedUser")
                        .WithMany("UserStockCreated")
                        .HasForeignKey("AddedBy");

                    b.HasOne("ERP_System.Tables.User", "DeletedUser")
                        .WithMany("UserStockDeleted")
                        .HasForeignKey("DeletedBy");

                    b.HasOne("ERP_System.Tables.User", "ModifiedUser")
                        .WithMany("UserStockModified")
                        .HasForeignKey("ModifiedBy");

                    b.HasOne("ERP_System.Tables.Stock", "Stock")
                        .WithMany("UserStocks")
                        .HasForeignKey("StockId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ERP_System.Tables.User", "User")
                        .WithMany("UserStocks")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedUser");

                    b.Navigation("DeletedUser");

                    b.Navigation("ModifiedUser");

                    b.Navigation("Stock");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ERP_System.Tables.UserType", b =>
                {
                    b.HasOne("ERP_System.Tables.User", "CreatedUser")
                        .WithMany("UserTypeCreated")
                        .HasForeignKey("AddedBy");

                    b.HasOne("ERP_System.Tables.User", "DeletedUser")
                        .WithMany("UserTypeDeleted")
                        .HasForeignKey("DeletedBy");

                    b.HasOne("ERP_System.Tables.User", "ModifiedUser")
                        .WithMany("UserTypeModified")
                        .HasForeignKey("ModifiedBy");

                    b.Navigation("CreatedUser");

                    b.Navigation("DeletedUser");

                    b.Navigation("ModifiedUser");
                });

            modelBuilder.Entity("ERP_System.Tables.ActionsPage", b =>
                {
                    b.Navigation("UserPermissions");
                });

            modelBuilder.Entity("ERP_System.Tables.Invoice", b =>
                {
                    b.Navigation("InvoiceDetails");
                });

            modelBuilder.Entity("ERP_System.Tables.ItemGrpoup", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("ERP_System.Tables.Page", b =>
                {
                    b.Navigation("ActionsPages");
                });

            modelBuilder.Entity("ERP_System.Tables.Product", b =>
                {
                    b.Navigation("Attachments");

                    b.Navigation("InvoiceDetails");

                    b.Navigation("StockProducts");
                });

            modelBuilder.Entity("ERP_System.Tables.Stock", b =>
                {
                    b.Navigation("UserStocks");
                });

            modelBuilder.Entity("ERP_System.Tables.Unit", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("ERP_System.Tables.User", b =>
                {
                    b.Navigation("ActionsPageCreated");

                    b.Navigation("ActionsPageDeleted");

                    b.Navigation("ActionsPageModified");

                    b.Navigation("AttatchCreated");

                    b.Navigation("AttatchDeleted");

                    b.Navigation("AttatchModified");

                    b.Navigation("InvoiceCreated");

                    b.Navigation("InvoiceDeleted");

                    b.Navigation("InvoiceDetailCreated");

                    b.Navigation("InvoiceDetailDeleted");

                    b.Navigation("InvoiceDetailModified");

                    b.Navigation("InvoiceModified");

                    b.Navigation("ItemGroupCreated");

                    b.Navigation("ItemGroupDeleted");

                    b.Navigation("ItemGroupModified");

                    b.Navigation("PageCreated");

                    b.Navigation("PageDeleted");

                    b.Navigation("PageModified");

                    b.Navigation("ProductCreated");

                    b.Navigation("ProductDeleted");

                    b.Navigation("ProductModified");

                    b.Navigation("SettingCreated");

                    b.Navigation("SettingDeleted");

                    b.Navigation("SettingModified");

                    b.Navigation("StockCreated");

                    b.Navigation("StockDeleted");

                    b.Navigation("StockModified");

                    b.Navigation("StockProductCreated");

                    b.Navigation("StockProductDeleted");

                    b.Navigation("StockProductModified");

                    b.Navigation("UnitCreated");

                    b.Navigation("UnitDeleted");

                    b.Navigation("UnitModified");

                    b.Navigation("UserCreated");

                    b.Navigation("UserDeleted");

                    b.Navigation("UserModified");

                    b.Navigation("UserPermissionCreated");

                    b.Navigation("UserPermissionDeleted");

                    b.Navigation("UserPermissionModified");

                    b.Navigation("UserStockCreated");

                    b.Navigation("UserStockDeleted");

                    b.Navigation("UserStockModified");

                    b.Navigation("UserStocks");

                    b.Navigation("UserTypeCreated");

                    b.Navigation("UserTypeDeleted");

                    b.Navigation("UserTypeModified");
                });

            modelBuilder.Entity("ERP_System.Tables.UserType", b =>
                {
                    b.Navigation("UserPermissions");

                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
