// <auto-generated />
using System;
using ERP_System.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ERP_System.DAL.Migrations
{
    [DbContext(typeof(ERP_SystemDbContext))]
    [Migration("20230526154510_initDatabase")]
    partial class initDatabase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ERP_System.Tables.ActionsPage", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ActionName")
                        .HasColumnType("int");

                    b.Property<Guid?>("AddedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("PageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("AddedBy");

                    b.HasIndex("DeletedBy");

                    b.HasIndex("ModifiedBy");

                    b.HasIndex("PageId");

                    b.ToTable("ActionsPages", "Page");
                });

            modelBuilder.Entity("ERP_System.Tables.Area", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AddedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IconName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsLink")
                        .HasColumnType("bit");

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("AddedBy");

                    b.HasIndex("DeletedBy");

                    b.HasIndex("ModifiedBy");

                    b.ToTable("Areas", "Page");
                });

            modelBuilder.Entity("ERP_System.Tables.Page", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AddedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AreaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ControllerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IconName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("AddedBy");

                    b.HasIndex("AreaId");

                    b.HasIndex("DeletedBy");

                    b.HasIndex("ModifiedBy");

                    b.ToTable("Pages", "Page");
                });

            modelBuilder.Entity("ERP_System.Tables.User", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AddedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CodeOfReset")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ResetPasswordDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Salt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("UseDefaultPassword")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid?>("UserTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("AddedBy");

                    b.HasIndex("DeletedBy");

                    b.HasIndex("ModifiedBy");

                    b.HasIndex("UserTypeId");

                    b.ToTable("Users", "People");
                });

            modelBuilder.Entity("ERP_System.Tables.UserPermission", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AddedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("PageActionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UserTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("AddedBy");

                    b.HasIndex("DeletedBy");

                    b.HasIndex("ModifiedBy");

                    b.HasIndex("PageActionId");

                    b.HasIndex("UserTypeId");

                    b.ToTable("UserPermissions", "People");
                });

            modelBuilder.Entity("ERP_System.Tables.UserType", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AddedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("AddedBy");

                    b.HasIndex("DeletedBy");

                    b.HasIndex("ModifiedBy");

                    b.ToTable("UserTypes", "Guide");
                });

            modelBuilder.Entity("ERP_System.Tables.ActionsPage", b =>
                {
                    b.HasOne("ERP_System.Tables.User", "CreatedUser")
                        .WithMany("ActionsPageCreated")
                        .HasForeignKey("AddedBy");

                    b.HasOne("ERP_System.Tables.User", "DeletedUser")
                        .WithMany("ActionsPageDeleted")
                        .HasForeignKey("DeletedBy");

                    b.HasOne("ERP_System.Tables.User", "ModifiedUser")
                        .WithMany("ActionsPageModified")
                        .HasForeignKey("ModifiedBy");

                    b.HasOne("ERP_System.Tables.Page", "Page")
                        .WithMany("ActionsPages")
                        .HasForeignKey("PageId");

                    b.Navigation("CreatedUser");

                    b.Navigation("DeletedUser");

                    b.Navigation("ModifiedUser");

                    b.Navigation("Page");
                });

            modelBuilder.Entity("ERP_System.Tables.Area", b =>
                {
                    b.HasOne("ERP_System.Tables.User", "CreatedUser")
                        .WithMany("AreaCreated")
                        .HasForeignKey("AddedBy");

                    b.HasOne("ERP_System.Tables.User", "DeletedUser")
                        .WithMany("AreaDeleted")
                        .HasForeignKey("DeletedBy");

                    b.HasOne("ERP_System.Tables.User", "ModifiedUser")
                        .WithMany("AreaModified")
                        .HasForeignKey("ModifiedBy");

                    b.Navigation("CreatedUser");

                    b.Navigation("DeletedUser");

                    b.Navigation("ModifiedUser");
                });

            modelBuilder.Entity("ERP_System.Tables.Page", b =>
                {
                    b.HasOne("ERP_System.Tables.User", "CreatedUser")
                        .WithMany("PageCreated")
                        .HasForeignKey("AddedBy");

                    b.HasOne("ERP_System.Tables.Area", "Area")
                        .WithMany("Pages")
                        .HasForeignKey("AreaId");

                    b.HasOne("ERP_System.Tables.User", "DeletedUser")
                        .WithMany("PageDeleted")
                        .HasForeignKey("DeletedBy");

                    b.HasOne("ERP_System.Tables.User", "ModifiedUser")
                        .WithMany("PageModified")
                        .HasForeignKey("ModifiedBy");

                    b.Navigation("Area");

                    b.Navigation("CreatedUser");

                    b.Navigation("DeletedUser");

                    b.Navigation("ModifiedUser");
                });

            modelBuilder.Entity("ERP_System.Tables.User", b =>
                {
                    b.HasOne("ERP_System.Tables.User", "CreatedUser")
                        .WithMany("UserCreated")
                        .HasForeignKey("AddedBy");

                    b.HasOne("ERP_System.Tables.User", "DeletedUser")
                        .WithMany("UserDeleted")
                        .HasForeignKey("DeletedBy");

                    b.HasOne("ERP_System.Tables.User", "ModifiedUser")
                        .WithMany("UserModified")
                        .HasForeignKey("ModifiedBy");

                    b.HasOne("ERP_System.Tables.UserType", "UserType")
                        .WithMany("Users")
                        .HasForeignKey("UserTypeId");

                    b.Navigation("CreatedUser");

                    b.Navigation("DeletedUser");

                    b.Navigation("ModifiedUser");

                    b.Navigation("UserType");
                });

            modelBuilder.Entity("ERP_System.Tables.UserPermission", b =>
                {
                    b.HasOne("ERP_System.Tables.User", "CreatedUser")
                        .WithMany("UserPermissionCreated")
                        .HasForeignKey("AddedBy");

                    b.HasOne("ERP_System.Tables.User", "DeletedUser")
                        .WithMany("UserPermissionDeleted")
                        .HasForeignKey("DeletedBy");

                    b.HasOne("ERP_System.Tables.User", "ModifiedUser")
                        .WithMany("UserPermissionModified")
                        .HasForeignKey("ModifiedBy");

                    b.HasOne("ERP_System.Tables.ActionsPage", "ActionsPage")
                        .WithMany("UserPermissions")
                        .HasForeignKey("PageActionId");

                    b.HasOne("ERP_System.Tables.UserType", "UserType")
                        .WithMany("UserPermissions")
                        .HasForeignKey("UserTypeId");

                    b.Navigation("ActionsPage");

                    b.Navigation("CreatedUser");

                    b.Navigation("DeletedUser");

                    b.Navigation("ModifiedUser");

                    b.Navigation("UserType");
                });

            modelBuilder.Entity("ERP_System.Tables.UserType", b =>
                {
                    b.HasOne("ERP_System.Tables.User", "CreatedUser")
                        .WithMany("UserTypeCreated")
                        .HasForeignKey("AddedBy");

                    b.HasOne("ERP_System.Tables.User", "DeletedUser")
                        .WithMany("UserTypeDeleted")
                        .HasForeignKey("DeletedBy");

                    b.HasOne("ERP_System.Tables.User", "ModifiedUser")
                        .WithMany("UserTypeModified")
                        .HasForeignKey("ModifiedBy");

                    b.Navigation("CreatedUser");

                    b.Navigation("DeletedUser");

                    b.Navigation("ModifiedUser");
                });

            modelBuilder.Entity("ERP_System.Tables.ActionsPage", b =>
                {
                    b.Navigation("UserPermissions");
                });

            modelBuilder.Entity("ERP_System.Tables.Area", b =>
                {
                    b.Navigation("Pages");
                });

            modelBuilder.Entity("ERP_System.Tables.Page", b =>
                {
                    b.Navigation("ActionsPages");
                });

            modelBuilder.Entity("ERP_System.Tables.User", b =>
                {
                    b.Navigation("ActionsPageCreated");

                    b.Navigation("ActionsPageDeleted");

                    b.Navigation("ActionsPageModified");

                    b.Navigation("AreaCreated");

                    b.Navigation("AreaDeleted");

                    b.Navigation("AreaModified");

                    b.Navigation("PageCreated");

                    b.Navigation("PageDeleted");

                    b.Navigation("PageModified");

                    b.Navigation("UserCreated");

                    b.Navigation("UserDeleted");

                    b.Navigation("UserModified");

                    b.Navigation("UserPermissionCreated");

                    b.Navigation("UserPermissionDeleted");

                    b.Navigation("UserPermissionModified");

                    b.Navigation("UserTypeCreated");

                    b.Navigation("UserTypeDeleted");

                    b.Navigation("UserTypeModified");
                });

            modelBuilder.Entity("ERP_System.Tables.UserType", b =>
                {
                    b.Navigation("UserPermissions");

                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
