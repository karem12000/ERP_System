
<script>
    $(document).ready(function () {
        LoadTable();
    });

    let form = $('#frm');
    function Submit() {
        event.preventDefault();
        Save();

    }

    function resetForm() {
        $('#Name').val('');
        $('#id').val('');

    }

    function Save() {

        if ($('#Name').val() == '') {
            Swal.fire({
                title: `من فضلك أدخل الاسم`,
                timer: 2000,
                timerProgressBar: true,
                icon: 'error',
                showConfirmButton: false
            });
        }
        else {
            $.post('@Url.GetAction("Save")', form.serialize(), function (res) {
                if (res.Status) {
                    Swal.fire({
                        title: `${res.Message}`,
                        timer: 2000,
                        timerProgressBar: true,
                        icon: 'success',
                        showConfirmButton: false
                    }).then((result) => {
                        resetForm();
                        //window.location.href = "/Guide/Unit/Index";
                    })

                }
                else {
                    Swal.fire({
                        title: `${res.Message}`,
                        timer: 2000,
                        timerProgressBar: true,
                        icon: 'error',
                        showConfirmButton: false
                    })
                }
            });
        }

    }

    function LoadTable() {
        $('#tbl').DataTable().destroy();

        dt = $('#tbl').DataTable({
            "columnDefs": [{ "defaultContent": "-", "targets": "_all" }],
            "language": _dataTableTranslate,
            pageLength: 10,
            pagijngType: "full_numbers",
            direction: 'rtl',
            serverSide: true,
            scrollX: true,
            processing: true,
            lengthMenu: [10, 25, 50, 75, 100],
            sAjaxSource: '@Url.GetAction("LoadDataTable")',
            sServerMethod: "POST",
            bPaginate: true,
            paging: true,
            dom: 'Blfrtip',
            buttons: [


            ],
            search: {},
            columns: [

                {
                    data: null,
                    bSortable: true,
                    render: function (data, type, row) { return '<label class="Name">' + (data.Name ?? "") + '</label><input hidden name="UnitID" class="UnitID" value="' + data.ID + '" /> ' }

                },
                //{
                //    data: null,
                //    bSortable: true,
                //    render: function (data, type, row) {
                //        if (data.UnitType == 0) {
                //            return '<label class="UnitType">أساسية</label><input hidden name="UnitType" class="UnitType" value="' + (data.UnitType) + '" /> '
                //        } else {
                //            return '<label class="UnitType">فرعية</label><input hidden name="UnitType" class="UnitType" value="' + (data.UnitType) + '" /> '
                //        }
                //    }

                //},
                //{
                //    data: null,
                //    bSortable: true,
                //    render: function (data, type, row) { return '<label class="ParentName">' + (data.ParentName == null ? "" : data.ParentName) + '</label><input hidden name="ParentId" class="ParentId" value="' + (data.ParentId == null ? null : data.ParentId) + '" /> ' }

                //},
                //{
                //    data: null,
                //    bSortable: true,
                //    render: function (data, type, row) { return '<label class="Rate">' + (data.Rate == null ? "" : data.Rate) + '</label><input hidden name="Rate" class="Rate" value="' + (data.Rate == null ? null : data.Rate) + '" /> ' }

                //},
                {
                    data: null,
                    bSortable: true,
                    render: function (data, type, row) { return '<label class="AddedDate">' + (data.AddedDate ?? "") + '</label><input hidden name="groupId" class="groupId" value="' + data.AddedDate + '" /> ' }

                },
                {

                    data: null,
                    bSortable: true,
                    render: function (data, type, row) {

                        return '<label class="align-center  statesact  ' + ((data.IsActive) ? "IsActive badge bg-success" : "IsDeactivate badge bg-danger") + ' "> <span>' + ((data.IsActive) ? "نشط" : "غير نشط") + '</span></label><input hidden class="isActive" value="' + data.IsActive + '" />'

                    }

                },
                {

                    data: null,
                    bSortable: false,
                    render: function (data, type, row) {
                        let btn = `<div class="Event">



    @if (CurrentForm.CurrentFormPermissionActions.EditHasPermission)
    {
                                                                                                                                                <a class="btn-icon btn btn-warning btn-sm"  href="/Guide/Unit/Edit/${data.ID}" >
                                                                                                                 <i class="fas fa-pen"></i>

                                                                                                                </a>

    }

    @if (CurrentForm.CurrentFormPermissionActions.DeleteHasPermission)
    {
                                                                                                                           <a class="btn-icon btn btn-danger btn-sm" onclick="Delete(this,'${data.ID}')" href="javascript:void(0)">
                                                                                                               <i class="fas fa-trash-alt"></i>

                                                                                                               </a>
    }
                                                                   `;
                        return btn + '</div>';
                    }
                }
            ]
        });

    }

    function Edit(e, id) {

        $.post('@Url.GetAction("GetById")', { "id": id }, function (data) {
            if (data.Data != null) {
                let unit = data.Data;
                $.post("/Guide/Unit/Edit", { 'mdl': unit });
            } else {
                Swal.fire({
                    title: `خطأ`,
                    timer: 2000,
                    timerProgressBar: true,
                    icon: 'error',
                    showConfirmButton: false
                });
            }
        });
    }

    function Delete(e, id) {

        var btn = $(e);
        var id = id;
        Swal.fire({
            title: 'هل أنت متأكد؟',
            text: "هل انت متاكد من اجراء العملية",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            cancelButtonText: 'الغاء',
            confirmButtonText: 'نعم ، حذف!'
        }).then((result) => {
            if (result.isConfirmed) {
                $.post('@Url.GetAction("Delete")', { id: id }, function (res) {

                    if (res.Status) {
                        Swal.fire({
                            title: `تم الحذف`,
                            timer: 2000,
                            timerProgressBar: true,
                            icon: 'success',
                            showConfirmButton: false
                        }).then(() => {
                            LoadTable();
                        });
                    }
                    else {

                        Swal.fire({
                            title: `خطأ في الحذف`,
                            timer: 2000,
                            timerProgressBar: true,
                            icon: 'warning',
                            showConfirmButton: false
                        });
                    }
                });

            }
        })

    }

    $("#ddlUnitType").change(function (e) {

        $(".parentDev").toggleClass("d-none");
        $(".rateDev").toggleClass("d-none");
    });


    $("#IsActive").change(function (e) {
        var isChecked = $(this).prop("checked");
        $("#IsActive").val(isChecked);
    });

</script>