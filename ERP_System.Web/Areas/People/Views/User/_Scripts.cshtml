<script>
    $(document).ready(function () {

        LoadTable();
        $('.js-example-rtl').select2({
            multiple: true,
            dir: "rtl",
        });
      });

    let form = $('#frm');
    function Submit() {

        event.preventDefault();

        var valid = form.valid();
        if (valid) {
            Save();
        }
    }

    function AddNew() {
        $('#id').val('');
        $('#userName').val('');
        $('#email').val('');
        $('#UserTypeId').val('0').trigger('change');
        $('#ddlBranchs').val('').trigger('change');
        $('#ddlFocusTypes').val('').trigger('change');
    }


    function Save() {
     
            $.post('@Url.GetAction("Save")', form.serialize(), function (res) {
                if (res.status) {
                    window.alert(res.message);

                }
                else {
                    window.alert(res.message);
                }
            });
        
    }

    function Delete(e,id) {

        alertify.confirm().setting('modal', false);

        var btn = $(e);
            var id = id;
      
                $.post('@Url.GetAction("Delete")', { id: id }, function (res) {

                    if (res.status) {
                        Swal.fire(
                            'تم الحذف!',
                            `${res.message}`,
                            'success'
                        )
                        btn.closest('tr').remove();
                    }
                    else {
                        Swal.fire(
                            'توقف!',
                            `${res.message}`,
                            'warning'
                        )
                    }
                });
            
    }


    function Edit(e,id) {

        var user = $(e);
        $('#id').val(id);
        var userName = user.closest('tr').find('.userName').html();
        var email = user.closest('tr').find('.email').html();
        var userTypeId = user.closest('tr').find('.userTypeId').val().toLowerCase();
        var branchIds = user.closest('tr').find('.branchIds').val().toLowerCase().split(',');
        var focusTypeIds = user.closest('tr').find('.focusTypeIds').val().toLowerCase().split(',');
        var isActive = user.closest('tr').find('.isActive').val();



        $('#userName').val(userName);
        $('#email').val(email);
        $('#UserTypeId').val(userTypeId).trigger('change');
        $('#ddlBranchs').val(branchIds).trigger('change');
        $('#ddlFocusTypes').val(focusTypeIds).trigger('change');
        if (isActive == 'true') {
            $("#IsActive").prop("checked", true);
        }
        else {
            $("#IsActive").prop("checked", false);
        }


        window.scrollTo(0, 0);

    }

    function LoadTable() {
       dt = $('#tbl').DataTable({ "columnDefs": [{ "defaultContent": "-", "targets": "_all" }],

             "language": _dataTableTranslate,
                pageLength: 10,
                scrollX: true,
                pagijngType: "full_numbers",
                direction: 'rtl',
                serverSide: true,
                processing: true,
                lengthMenu: [ 10, 25, 50, 75, 100 ],
                sAjaxSource: '@Url.GetAction("LoadDataTable")',
                sServerMethod: "POST",
                bPaginate: true,
                paging: true,
                dom: 'Blfrtip',
                buttons: [


            ],
                search:{},
                columns: [
                     {
                        data: null,
                        bSortable: true,
                        render: function (data, type, row) { return '<label class="userName">' + (data.userName ?? "") + '</label><input hidden name="userId" class="userId" value="' + data.id + '" /> ' }

                    },
                     {
                    data: null,
                    bSortable: true,
                    render: function (data, type, row) {
                        return '<label class="email">' + (data.email ?? "") + '</label>  <input hidden name="email" class="email" value="' + data.Email + '" />'
                    }

                    },
                    {
                        data: null,
                        bSortable: true,
                        render: function (data, type, row) {
                            return '<label class="userType">' + (data.userTypeName ?? "") + '</label>  <input hidden name="userTypeId" class="userTypeId" value="' + data.userTypeId + '" />'
                        }

                    },
                    {

                        data: null,
                        bSortable: true,
                        render: function (data, type, row) {
                            return '<label class="branchNames">' + ((data.branchNames.split(",").join(" , ")) ?? "") + '</label>  <input hidden name="branchIds" class="branchIds" value="' + data.branchIdAsString + '" />'
                        }

                    },
                    {

                        data: null,
                        bSortable: true,
                        render: function (data, type, row) {
                            return '<label class="focusTypeNames">' + (data.focusTypeNames ?? "") + '</label>  <input hidden name="focusTypeIds" class="focusTypeIds" value="' + data.userFocusTypeIdAsString + '" />'
                        }

                    },

                //  class for Deactivate 'IsDeactivate'
                {
                    data: null,
                    bSortable: false,
                    render: function (data, type, row) { return '<label class="align-center statesact ' + ((data.isActive) ? "IsActive" : "IsDeactivate") + ' "> <span>' + ((data.isActive) ? "مفعل" : "غير مفعل") + '</span></label><input hidden class="isActive" value="' + data.isActive + '" />'  }

                },

                    {

                        data: null,
                        bSortable: false,
                        render: function (data, type, row) {
                               let btn = `<div class="Event">

                                   @if (CurrentForm.CurrentFormPermissionActions.ShowHasPermission)
                                   {
                                   <a class="btn-icon btn btn-info">
        <i class="far fa-eye"></i>
                                           </a>
                                   }

                                   @if(CurrentForm.CurrentFormPermissionActions.EditHasPermission)
                                    {
                                        <a class="btn-icon btn btn-warning"  onclick="Edit(this,'${data.id}')">
                                        <i class="far fa-pen"></i>
                                               
                                        </a>

                                    }

                                    @if (CurrentForm.CurrentFormPermissionActions.DeleteHasPermission)
                                  {
                                           <a class="btn-icon btn btn-danger" onclick="Delete(this,'${data.id}')" href="javascript:void(0)">
                             <i class="fas fa-trash-alt"></i>
                                       
                                       </a>
                                  }
                               `;
     return btn +'</div>';
 }
                    }

                ]
            });

    }

    $("#IsActive").change(function (e) {
        var isChecked = $(this).prop("checked");
        $("#IsActive").val(isChecked);
    });

    function ShowUserPermissionModal(e) {
        var btn = $(e);

        var input = $(btn.closest('tr')).find('input[type=hidden]');
        var id = input.val();
        var name = input.attr('name');
        $.post('@Url.GetAction("ShowUserPermission")', {id:id} , function (res) {

            $('#tbodyUserPermissions').html('');

            $('#tbodyUserPermissions').html(res);
            $('#UserPermissions-Modal').modal();
            $('#tbodyUserPermissions').attr('userId', id);
            $('.lblName').html(name);



        });


    }

    function ShowUserClientModal(e) {
        var btn = $(e);
            var input = $(btn.closest('tr')).find('input[type=hidden]');
            var id = input.val();
            var name = input.attr('name');

        $.post('@Url.GetAction("ShowUserClient")', {id:id} , function (res) {

            $('#ddlUserClients').html('');

            $('#ddlUserClients').html(res);
            $('#UserClients-Modal').modal();
            $('#ddlUserClients').attr('userId', id);
            $('.lblName').html(name);



        });


    }

    function SaveUserPermission() {


            var ArrayOfObj = [];
        $.each($('#tbodyUserPermissions').children(), function (key, value) {
            var tr = $(value);
            var Permissions = tr.find('.Permission');
            $.each(Permissions, function (k, v) {
                var obj = new Object();
                var check = $(v);
                var PageId = tr.find('[name=PageId]').val();
                var HasPermission = check.prop('checked');

                obj.PageId = PageId;
                obj.HasPermission = HasPermission;
                obj.ActionName = check.attr('name');

                ArrayOfObj.push(obj);
            });


        });

            $.post('@Url.GetAction("SaveUserPermission")', { userId: $('#tbodyUserPermissions').attr('userId'), mdl: ArrayOfObj }, function (res) {


                if (res.status) {
                    alertify.success(res.message);
                }
                else {
                    alertify.alert(res.message).setHeader('@AppConstants.Messages.StopTitle');

                }



            });


    }

    function SaveUserClient() {


            let ArrayOfObj = [];
            $.each($('#ddlUserClients').children(), function (key, value) {
                let obj = new Object();

                let ClientId = $(value).val();
                let UserId = $('#ddlUserClients').attr('userid')
                let ClientChecked = $(value).prop('selected');

                obj.ClientId = ClientId;
                obj.UserId = UserId;
                obj.ClientChecked = ClientChecked;
                ArrayOfObj.push(obj);
            });
          //  console.log(ArrayOfObj);
            let frm = new FormData();
            frm.append('userId', $('#ddlUserClients').attr('userId'));
            frm.append('mdl', JSON.stringify(ArrayOfObj));



            $.ajax({
                type: "POST",
                url: '@Url.GetAction("SaveUserClient")',
                data: frm,
                contentType: false,
                processData: false,
                dataType: "json",
                success: function (res) {
                    if (res.status) {
                        alertify.success(res.message);
                    }
                    else {
                        alertify.alert(res.message).setHeader('@AppConstants.Messages.StopTitle');

                    }
                },
                failure: function (response) {
                },
                error: function (response) {
                }
            });



    }

    function ChangeStatus(e) {
          alertify.confirm().setting('modal', false);

        var btn = $(e);
        var id = $(btn.closest('tr')).find('input[type=hidden]').val();
        alertify.confirm('هل انت متاكد من اجراء العملية', '', function () {

            $.post('@Url.GetAction("ChangeStatus")', {id:id}, function (res) {

                 if (res.status) {
                     alertify.success(res.message);


                }
                else {
                    alertify.alert(res.message).setHeader('توقف');

                }




            });

        },

            function () { }
        ).set('labels', { ok: 'نعم', cancel: 'لا' });
    }

    function ResetPassword(e) {
          alertify.confirm().setting('modal', false);

        var btn = $(e);
        var id = $(btn.closest('tr')).find('input[type=hidden]').val();
        alertify.confirm('هل انت متاكد من اجراء العملية', '', function () {

            $.post('@Url.GetAction("ResetPassword")', {id:id}, function (res) {

                 if (res.status) {
                     alertify.success(res.message);


                }
                else {
                    alertify.alert(res.message).setHeader('توقف');

                }




            });

        },

            function () { }
        ).set('labels', { ok: 'نعم', cancel: 'لا' });
    }

    function CheckAll(elem) {
        var checked = $(elem).prop('checked');
        var name = $(elem).attr('name');
        $(`input[name=${name}]`).prop('checked', checked);

    }

</script>