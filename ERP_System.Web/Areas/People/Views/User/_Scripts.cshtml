<script>
    $(document).ready(function () {
       
            LoadTable();
        $('.js-example-rtl').select2({
            multiple: true,
            dir: "rtl",
        });
    });

    let form = $('#frm');
    function Submit() {

        event.preventDefault();

            Save();
        
    }

    
    function Save() {
        if ($('#Name').val() == '' || $('#UserName').val() == '' || $('#Email').val()=='' || $('#ddlUserTypeId').val()=='' ) {
            Swal.fire({
                title: `من فضلك أدخل البيانات الأساسية`,
                timer: 2000,
                timerProgressBar: true,
                icon: 'error',
                showConfirmButton: false
            });
        }else{
             $.post('@Url.GetAction("Save")', form.serialize(), function (res) {
            if (res.Status) {
                    Swal.fire({
                        title: `${res.Message}`,
                        timer: 2000,
                        timerProgressBar: true,
                        icon: 'success',
                        showConfirmButton: false
                    }).then((result) => {
                        window.location.href = "/People/User/Index";
                    })
            }
            else {
                    Swal.fire({
                        title: `${res.Message}`,
                        timer: 2000,
                        timerProgressBar: true,
                        icon: 'error',
                        showConfirmButton: false
                    })
            }
        });
        }
    }

    function Delete(e, id) {
        var btn = $(e);
        var id = id;
        Swal.fire({
            title: 'هل أنت متأكد؟',
            text: "هل انت متاكد من اجراء العملية",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            cancelButtonText: 'الغاء',
            confirmButtonText: 'نعم ، حذف!'
        }).then((result) => {
            if (result.isConfirmed) {
                $.post('@Url.GetAction("Delete")', { id: id }, function (res) {
                    if (res.Status) {
                        Swal.fire({
                            title: `تم الحذف`,
                            timer: 2000,
                            timerProgressBar: true,
                            icon: 'success',
                            showConfirmButton: false
                        }).then(() => {
                            LoadTable();
                        });
                    }
                    else {

                        Swal.fire({
                            title: `خطأ في الحذف`,
                            timer: 2000,
                            timerProgressBar: true,
                            icon: 'warning',
                            showConfirmButton: false
                        });
                    }
                });

            }
        })

    }

    function LoadTable() {
        dt = $('#tbl').DataTable({
            "columnDefs": [{ "defaultContent": "-", "targets": "_all" }],

            "language": _dataTableTranslate,
            pageLength: 10,
            scrollX: true,
            pagijngType: "full_numbers",
            direction: 'rtl',
            serverSide: true,
            processing: true,
            lengthMenu: [10, 25, 50, 75, 100],
            sAjaxSource: '@Url.GetAction("LoadDataTable")',
            sServerMethod: "POST",
            bPaginate: true,
            paging: true,
            dom: 'Blfrtip',
            buttons: [

            ],
            search: {},
            columns: [
                {
                    data: null,
                    bSortable: true,
                    render: function (data, type, row) { return '<label class="Name">' + (data.Name == null ? "" : data.Name) + '</label><input hidden name="UserId" class="UserId" value="' + (data.ID) + '" /> ' }

                },
                {
                    data: null,
                    bSortable: true,
                    render: function (data, type, row) { return '<label class="UserName">' + (data.UserName == null ? "" : data.UserName) + '</label><input hidden name="UserName" class="UserName" value="' + (data.UserName == null ? "" : data.UserName) + '" /> ' }

                },
                {
                    data: null,
                    bSortable: true,
                    render: function (data, type, row) {
                        return '<label class="Email">' + (data.Email == null ? "" : data.Email) + '</label>  <input hidden name="Email" class="Email" value="' + (data.Email == null ? "" : data.Email) + '" />'
                    }

                },
                {
                    data: null,
                    bSortable: true,
                    render: function (data, type, row) {
                        return '<label class="UserType">' + (data.UserTypeName == null ? "" : data.UserTypeName) + '</label>  <input hidden name="UserTypeId" class="UserTypeId" value="' + data.UserTypeId + '" />'
                    }

                },
                {
                    data: null,
                    bSortable: true,
                    render: function (data, type, row) {
                        return '<label class="Phone">' + (data.Phone == null ? "" : data.Phone) + '</label>  <input hidden name="Phone" class="Phone" value="' + (data.Phone == null ? "" : data.Phone) + '" />'
                    }

                },
                {
                    data: null,
                    bSortable: true,
                    render: function (data, type, row) {
                        return '<label class="Address">' + (data.Address == null ? "" : data.Address) + '</label>  <input hidden name="Address" class="Address" value="' + (data.Address == null ? "" : data.Address) + '" />'
                    }

                },
                {
                    data: null,
                    bSortable: true,
                    render: function (data, type, row) { return '<label class="AddedDate">' + (data.AddedDate ?? "") + '</label><input hidden name="groupId" class="groupId" value="' + data.AddedDate + '" /> ' }

                },
                {

                    data: null,
                    bSortable: true,
                    render: function (data, type, row) {

                        return '<label class="align-center  statesact  ' + ((data.IsActive) ? "IsActive badge bg-success" : "IsDeactivate badge bg-danger") + ' "> <span>' + ((data.IsActive) ? "نشط" : "غير نشط") + '</span></label><input hidden class="isActive" value="' + data.IsActive + '" />'

                    }

                },
                {

                    data: null,
                    bSortable: false,
                    render: function (data, type, row) {
                        let btn = `<div class="Event">

    @if (CurrentForm.CurrentFormPermissionActions.EditHasPermission)
    {
                                                                <a class="btn-icon btn btn-warning btn-sm" href="/People/User/Edit/${data.ID}">
                                                                <i class="fas fa-pen"></i>

                                                                </a>

    }

    @if (CurrentForm.CurrentFormPermissionActions.DeleteHasPermission)
    {
                                                                           <a class="btn-icon btn btn-danger btn-sm" onclick="Delete(this,'${data.id}')" href="javascript:void(0)">
                                                     <i class="fas fa-trash-alt"></i>

                                                               </a>
    }
                                           `;
                        return btn + '</div>';
                    }
                }

            ]
        });

    }


    
    $("#IsActive").change(function (e) {
        var isChecked = $(this).prop("checked");
        $("#IsActive").val(isChecked);
    });
    

    function ShowUserPermissionModal(e) {
        var btn = $(e);

        var input = $(btn.closest('tr')).find('input[type=hidden]');
        var id = input.val();
        var name = input.attr('name');
        $.post('@Url.GetAction("ShowUserPermission")', { id: id }, function (res) {

            $('#tbodyUserPermissions').html('');

            $('#tbodyUserPermissions').html(res);
            $('#UserPermissions-Modal').modal();
            $('#tbodyUserPermissions').attr('userId', id);
            $('.lblName').html(name);



        });


    }

    function ShowUserClientModal(e) {
        var btn = $(e);
        var input = $(btn.closest('tr')).find('input[type=hidden]');
        var id = input.val();
        var name = input.attr('name');

        $.post('@Url.GetAction("ShowUserClient")', { id: id }, function (res) {

            $('#ddlUserClients').html('');

            $('#ddlUserClients').html(res);
            $('#UserClients-Modal').modal();
            $('#ddlUserClients').attr('userId', id);
            $('.lblName').html(name);



        });


    }

    function SaveUserPermission() {


        var ArrayOfObj = [];
        $.each($('#tbodyUserPermissions').children(), function (key, value) {
            var tr = $(value);
            var Permissions = tr.find('.Permission');
            $.each(Permissions, function (k, v) {
                var obj = new Object();
                var check = $(v);
                var PageId = tr.find('[name=PageId]').val();
                var HasPermission = check.prop('checked');

                obj.PageId = PageId;
                obj.HasPermission = HasPermission;
                obj.ActionName = check.attr('name');

                ArrayOfObj.push(obj);
            });


        });

        $.post('@Url.GetAction("SaveUserPermission")', { userId: $('#tbodyUserPermissions').attr('userId'), mdl: ArrayOfObj }, function (res) {


            if (res.status) {
                alertify.success(res.message);
            }
            else {
                alertify.alert(res.message).setHeader('@AppConstants.Messages.StopTitle');

            }



        });


    }

    function SaveUserClient() {


        let ArrayOfObj = [];
        $.each($('#ddlUserClients').children(), function (key, value) {
            let obj = new Object();

            let ClientId = $(value).val();
            let UserId = $('#ddlUserClients').attr('userid')
            let ClientChecked = $(value).prop('selected');

            obj.ClientId = ClientId;
            obj.UserId = UserId;
            obj.ClientChecked = ClientChecked;
            ArrayOfObj.push(obj);
        });
        //  console.log(ArrayOfObj);
        let frm = new FormData();
        frm.append('userId', $('#ddlUserClients').attr('userId'));
        frm.append('mdl', JSON.stringify(ArrayOfObj));



        $.ajax({
            type: "POST",
            url: '@Url.GetAction("SaveUserClient")',
            data: frm,
            contentType: false,
            processData: false,
            dataType: "json",
            success: function (res) {
                if (res.status) {
                    alertify.success(res.message);
                }
                else {
                    alertify.alert(res.message).setHeader('@AppConstants.Messages.StopTitle');

                }
            },
            failure: function (response) {
            },
            error: function (response) {
            }
        });



    }

    function ChangeStatus(e) {
        alertify.confirm().setting('modal', false);

        var btn = $(e);
        var id = $(btn.closest('tr')).find('input[type=hidden]').val();
        alertify.confirm('هل انت متاكد من اجراء العملية', '', function () {

            $.post('@Url.GetAction("ChangeStatus")', { id: id }, function (res) {

                if (res.status) {
                    alertify.success(res.message);


                }
                else {
                    alertify.alert(res.message).setHeader('توقف');

                }




            });

        },

            function () { }
        ).set('labels', { ok: 'نعم', cancel: 'لا' });
    }

    function ResetPassword(e) {
        alertify.confirm().setting('modal', false);

        var btn = $(e);
        var id = $(btn.closest('tr')).find('input[type=hidden]').val();
        alertify.confirm('هل انت متاكد من اجراء العملية', '', function () {

            $.post('@Url.GetAction("ResetPassword")', { id: id }, function (res) {

                if (res.status) {
                    alertify.success(res.message);


                }
                else {
                    alertify.alert(res.message).setHeader('توقف');

                }




            });

        },

            function () { }
        ).set('labels', { ok: 'نعم', cancel: 'لا' });
    }

    function CheckAll(elem) {
        var checked = $(elem).prop('checked');
        var name = $(elem).attr('name');
        $(`input[name=${name}]`).prop('checked', checked);

    }

</script>